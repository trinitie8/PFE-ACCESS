DROP DATABASE IF EXISTS MLR1;

CREATE DATABASE IF NOT EXISTS MLR1;
USE MLR1;
# -----------------------------------------------------------------------------
#       TABLE : SOUTENANCE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS SOUTENANCE
 (
   NUMERO_SOUTENANCE INT (2) NOT NULL  ,
   NUM_MENTION INT (2) NOT NULL  ,
   INSCRIPTION_SOUTENANCE INT(1) NOT NULL  ,
   DESIGNATION_RAPPORTEURS INT(1) NOT NULL  ,
   COMPOSITION_JURY INT(1) NOT NULL  ,
   RAPPORT_DONNEE_BUREAU DATE NULL  ,
   RAPPORT_RECU INT(1) NOT NULL  ,
   BUREAU_JURY DATE NULL  ,
   INTITULE_DOCTORAT CLOB NULL  ,
   NUMERO_DOCTORAT INT(2) NULL  ,
   MENTION_SOUTENANCE CLOB NULL  
   , PRIMARY KEY (NUMERO_SOUTENANCE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE SOUTENANCE
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_SOUTENANCE_MENTIONS
     ON SOUTENANCE (NUM_MENTION ASC);

# -----------------------------------------------------------------------------
#       TABLE : PROFESSION_DOCTORALE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PROFESSION_DOCTORALE
 (
   CODE_PROFESSION_INSEE INT(5) NOT NULL  ,
   PROFESSION_INSEE INT(5) NOT NULL  
   , PRIMARY KEY (CODE_PROFESSION_INSEE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : CHOIX_ANNEE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS CHOIX_ANNEE
 (
   NUMERO_CHOIX_ANNEE INT(2) NOT NULL  ,
   CHOIX_1_CD CHAR(32) NULL  ,
   CHOIX_2_CD CHAR(32) NULL  ,
   CHOIX_3_CD CHAR(32) NULL  ,
   CHOIX_1_MS CHAR(32) NULL  ,
   CHOIX_2_MS CHAR(32) NULL  ,
   CHOIX_3_MS CHAR(32) NULL  ,
   CHOIX_1_CS CHAR(32) NULL  ,
   CHOIX_2_CS CHAR(32) NULL  ,
   CHOIX_3_CS CHAR(32) NULL  ,
   CD CHAR(32) NULL  ,
   MS CHAR(32) NULL  ,
   CS CHAR(32) NULL  ,
   CD_VALIDE INT(1) NULL  ,
   MS_VALIDE INT(1) NULL  ,
   CS_VALIDE INT(1) NULL  ,
   COMMENTAIRE CLOB NULL  
   , PRIMARY KEY (NUMERO_CHOIX_ANNEE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : DISCIPLINES
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS DISCIPLINES
 (
   CODE_DISCIPLINE INT(4) NOT NULL  ,
   NOM_DISCIPLINE CLOB NOT NULL  ,
   CODE_DS_DISCIPLINE INT(5) NOT NULL  ,
   CODE_RSD_DISCIPLINE INT(2) NOT NULL  ,
   REGROUPEMENT_SECTION_DISCIPLINE CLOB NOT NULL  
   , PRIMARY KEY (CODE_DISCIPLINE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : FINANCEMENT
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS FINANCEMENT
 (
   CODE_FINANCEMENT CHAR(32) NOT NULL  ,
   FINANCEMENT CHAR(32) NULL  
   , PRIMARY KEY (CODE_FINANCEMENT) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : PAYS
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PAYS
 (
   CODE_PAYS INT(2) NOT NULL  ,
   NOM_PAYS CLOB NOT NULL  ,
   ORDRE INT(2) NOT NULL  
   , PRIMARY KEY (CODE_PAYS) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : POST_DOCTORAT
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS POST_DOCTORAT
 (
   NUMERO_POST_DOCTORAT CHAR(32) NOT NULL  ,
   NUMERO_ANNEE_POST_DOCTORAT CHAR(32) NOT NULL  ,
   CODE_CNU INT(2) NOT NULL  ,
   NUMERO_ANNEE_POST_DOCTORAT_ANNNEE_T2 CHAR(32) NOT NULL  ,
   ATER INT(1) NOT NULL  ,
   FORMATION_COMPLEMENTAIRE INT(2) NULL  ,
   LIBELLE_FORMATION_COMPLEMENTAIRE CLOB NULL  ,
   NOMBRE_HEURE_FORMATION INT(2) NULL  ,
   DUREE_POST_DOC INT(2) NULL  ,
   PAYS_POST_DOC CLOB NULL  ,
   QUALIFICATION_CNU INT(2) NULL  ,
   SECTION_QUALIFICATION CHAR(32) NULL  ,
   ANNEE_T2 CHAR(32) NULL  ,
   ANNEE_T3 CHAR(32) NULL  
   , PRIMARY KEY (NUMERO_POST_DOCTORAT) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE POST_DOCTORAT
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_POST_DOCTORAT_ANNEE_POST_DOCTORAT
     ON POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT ASC);

CREATE  INDEX I_FK_POST_DOCTORAT_SECTION_CNU
     ON POST_DOCTORAT (CODE_CNU ASC);

CREATE  INDEX I_FK_POST_DOCTORAT_ANNEE_POST_DOCTORAT1
     ON POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT_ANNNEE_T2 ASC);

# -----------------------------------------------------------------------------
#       TABLE : SECTION_CNU
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS SECTION_CNU
 (
   CODE_CNU INT(2) NOT NULL  ,
   CODE_DNS INT(2) NULL  ,
   SECTION_CNU CHAR(32) NOT NULL  
   , PRIMARY KEY (CODE_CNU) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : THESARD
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS THESARD
 (
   NUM_THESARD INT(2) NOT NULL  ,
   NUMERO_THESARD_LABORATOIRE CHAR(32) NOT NULL  ,
   CODE_PAYS INT(2) NOT NULL  ,
   NUM_CIVILITE CHAR(32) NOT NULL  ,
   NUM_ANNEE INT(2) NOT NULL  ,
   NUMERO_THESE INT(2) NOT NULL  ,
   NUMERO_POST_DOCTORAT CHAR(32) NULL  ,
   NUMERO_PARCOURS_THESE CHAR(32) NOT NULL  ,
   NOM_THESARD CLOB NOT NULL  ,
   PRENOM_THESARD CLOB NOT NULL  ,
   DATE_NIASSANCE_THESARD DATE NULL  ,
   NOM_EPOUSE_THESARD CLOB NULL  ,
   SEXE CHAR(1) NOT NULL  ,
   CODE_APOGEE_THESARD INT(10) NULL  ,
   ANNEE_INSCRIPTION_THESE INT(4) NULL  ,
   PAYS_THESARD CLOB NULL  ,
   ADRESSE_RUE_THESARD CLOB NULL  ,
   ADRESSE_RESIDENCE_THESARD CLOB NULL  ,
   ADRESSE_CODE_POSTALE_THESARD INT(5) NULL  ,
   ADRESSE_VILLE_THESARD CLOB NULL  ,
   TELEPHONE_PERSONNEL_THESARD CHAR(32) NULL  ,
   TELEPHONE_FAX_THESARD CHAR(32) NULL  ,
   E_MAIL_PERSONNEL_THESARD CLOB NULL  ,
   PAGE_WEB_PERSONNELLE_THESARD CLOB NULL  ,
   NOM_PARENTS_THESARD CLOB NULL  ,
   ADRESSE_PARENTS_THESARD CLOB NULL  ,
   ADRESSE_RUE_PARENTS_THESARD CLOB NULL  ,
   ADRESSE_CODE_POSTAL_PARENTS_THESARD INT(5) NULL  ,
   ADRESSE_VILLE_PARENTS_THESARD CLOB NULL  ,
   DONNEES_PUBLIABLES_THESARD INT(1) NOT NULL  ,
   PHOTO_THESARD file NULL  ,
   PRESENCE_THESARD INT(2) NULL  ,
   SELECTION_THESARD INT(2) NULL  ,
   RETARD_INSCRIPTION_THESARD INT(1) NULL  ,
   TRI_THESARD INT(1) NULL  ,
   NOMBRE_COURS_VALIDE_THESARD INT(2) NULL  ,
   ENSEMBLE_COURS_VALIDE_THESARD INT(1) NOT NULL  ,
   EMARGEMENT_THESARD CLOB NULL  ,
   DOSSIER_THESARD CHAR(32) NULL  ,
   FIRCHE_RENSEIGNEMENT_THESARD CHAR(32) NULL  ,
   LETTRE_REUNION_THESARD CLOB NULL  ,
   THESE CHAR(32) NULL  ,
   CIVILITE_THESARD CHAR(32) NULL  ,
   POST_DOC_THESARD CHAR(32) NULL  ,
   INFORMATIONS_THESARD_LABORATOIRE CHAR(32) NULL  
   , PRIMARY KEY (NUM_THESARD) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE THESARD
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_THESARD_THESARD_LABORATOIRE
     ON THESARD (NUMERO_THESARD_LABORATOIRE ASC);

CREATE  INDEX I_FK_THESARD_PAYS
     ON THESARD (CODE_PAYS ASC);

CREATE  INDEX I_FK_THESARD_CIVILITE
     ON THESARD (NUM_CIVILITE ASC);

CREATE  INDEX I_FK_THESARD_ANNEE
     ON THESARD (NUM_ANNEE ASC);

CREATE  INDEX I_FK_THESARD_THESE
     ON THESARD (NUMERO_THESE ASC);

CREATE  INDEX I_FK_THESARD_POST_DOCTORAT
     ON THESARD (NUMERO_POST_DOCTORAT ASC);

CREATE  INDEX I_FK_THESARD_PARCOURS_DE_THESE
     ON THESARD (NUMERO_PARCOURS_THESE ASC);

# -----------------------------------------------------------------------------
#       TABLE : ANNEE_POST_DOCTORAT
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS ANNEE_POST_DOCTORAT
 (
   NUMERO_ANNEE_POST_DOCTORAT CHAR(32) NOT NULL  ,
   CODE_PAYS INT(2) NOT NULL  ,
   CODE_PROFESSION_INSEE INT(5) NOT NULL  ,
   NUMERO_FONCTION INT(2) NOT NULL  ,
   NUMERO_SECTEUR_ACTIVITE INT(2) NOT NULL  ,
   SITUATION_DOCTEUR CHAR(32) NULL  ,
   PROFESSION_DOCTEUR CHAR(32) NULL  ,
   CODE_PROFESSION CHAR(32) NULL  ,
   SECTEUR_ACTIVITE CHAR(32) NULL  ,
   TRAVAIL_FRANCE INT(1) NULL  ,
   DEPARTEMENT_FRANCE CHAR(32) NULL  ,
   DETERMINANT_EMBAUCHE INT(1) NULL  ,
   PAYS_POUR_ETRANGER CHAR(32) NULL  ,
   SALAIRE_MENSUEL CHAR(32) NULL  ,
   DATE_RECRUTEMENT DATE NULL  
   , PRIMARY KEY (NUMERO_ANNEE_POST_DOCTORAT) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE ANNEE_POST_DOCTORAT
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_PAYS
     ON ANNEE_POST_DOCTORAT (CODE_PAYS ASC);

CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_PROFESSION_DOCTORALE
     ON ANNEE_POST_DOCTORAT (CODE_PROFESSION_INSEE ASC);

CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_FONCTIONS
     ON ANNEE_POST_DOCTORAT (NUMERO_FONCTION ASC);

CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_SECTEUR_ACTIVITE
     ON ANNEE_POST_DOCTORAT (NUMERO_SECTEUR_ACTIVITE ASC);

# -----------------------------------------------------------------------------
#       TABLE : CIVILITE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS CIVILITE
 (
   NUM_CIVILITE CHAR(32) NOT NULL  ,
   CIVILITE CLOB NOT NULL  
   , PRIMARY KEY (NUM_CIVILITE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : TYPE_EQUIPE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS TYPE_EQUIPE
 (
   NUM_TYPE INT(5) NOT NULL  ,
   TYPE_EQUIPE CLOB NOT NULL  ,
   ORGANISME CHAR(32) NULL  
   , PRIMARY KEY (NUM_TYPE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : LABORATOIRE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS LABORATOIRE
 (
   NUM_LABORATOIRE INT(5) NOT NULL  ,
   NUMERO_COMPOSANTE INT(2) NOT NULL  ,
   NUM_CIVILITE CHAR(32) NOT NULL  ,
   NUM_TYPE INT(5) NOT NULL  ,
   PRIORITAIRE INT(1) NOT NULL  ,
   ABREGE_LABORATOIRE CHAR(32) NOT NULL  ,
   NOM_LABORATOIRE CHAR(32) NOT NULL  ,
   TYPE_EQUIPE CHAR(32) NULL  ,
   NUMERO_DE_LABORATOIRE CHAR(32) NULL  ,
   COMPOSANTE_RATACHEMENT CHAR(32) NULL  ,
   RUE_LABORATOIRE CHAR(32) NULL  ,
   CODE_POSTALE_LABORATOIRE INT(2) NULL  ,
   VILLE_LABORATOIRE CLOB NULL  ,
   TELEPHONE_LABORATOIRE CHAR(32) NULL  ,
   FAX_LABORATOIRE CHAR(32) NULL  ,
   CIVILITE_DIRECTEUR_LABORATOIRE CHAR(5) NULL  ,
   NOM_DIRECTEUR_LABORATOIRE CLOB NULL  
   , PRIMARY KEY (NUM_LABORATOIRE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE LABORATOIRE
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_LABORATOIRE_COMPOSANTES
     ON LABORATOIRE (NUMERO_COMPOSANTE ASC);

CREATE  INDEX I_FK_LABORATOIRE_CIVILITE
     ON LABORATOIRE (NUM_CIVILITE ASC);

CREATE  INDEX I_FK_LABORATOIRE_TYPE_EQUIPE
     ON LABORATOIRE (NUM_TYPE ASC);

# -----------------------------------------------------------------------------
#       TABLE : ANNEE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS ANNEE
 (
   NUM_ANNEE INT(2) NOT NULL  ,
   ANNEE INT(2) NOT NULL  
   , PRIMARY KEY (NUM_ANNEE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : FONCTIONS
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS FONCTIONS
 (
   NUMERO_FONCTION INT(2) NOT NULL  ,
   ACTIVITE_FONCTION CLOB NOT NULL  ,
   LIBELLE_FONCTION CLOB NOT NULL  
   , PRIMARY KEY (NUMERO_FONCTION) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : THESE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS THESE
 (
   NUMERO_THESE INT(2) NOT NULL  ,
   NUM_ANNEE INT(2) NOT NULL  ,
   NUM_ANNEE_INSCRIPTION_ANNEE_3 INT(2) NOT NULL  ,
   CODE_FINANCEMENT CHAR(32) NOT NULL  ,
   NUM_ANNEE_INSCRIPTION_ANNEE_4 INT(2) NOT NULL  ,
   CODE_DISCIPLINE INT(4) NOT NULL  ,
   SUJET_THESE CLOB NOT NULL  ,
   CO_TUTELLE_THESE INT(1) NOT NULL  ,
   PAYS_CO_TUTELLE_THESE CHAR(32) NULL  ,
   UNIVERSITE_CO_TUTELLE_THESE CHAR(32) NULL  ,
   DATE_DEBUT_ALLOCATION_FINANCEMENT DATE NULL  ,
   CODE_FINANCEMENT_THESE CHAR(32) NULL  ,
   INFORMATIONS_COMPLEMENTAIRE_FINANCEMENT CLOB NULL  ,
   MONITEUR_CIES_FINANCEMENT INT(1) NOT NULL  ,
   INSCRIPTION_ANNEE_2 CHAR(32) NULL  ,
   INSCRIPTION_ANNEE_3 CHAR(32) NULL  ,
   INSCRIPTION_ANNEE_4 CHAR(32) NULL  ,
   AUTRES_INSCRIPTIONS CLOB NULL  ,
   LIEN_LABORATOIRE CHAR(32) NULL  ,
   COMPOSANTE_INSCRIPTION CHAR(32) NOT NULL  ,
   DISCIPLINE_THESE CHAR(32) NULL  ,
   ABANDON_THESE INT(1) NOT NULL  
   , PRIMARY KEY (NUMERO_THESE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE THESE
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_THESE_ANNEE
     ON THESE (NUM_ANNEE ASC);

CREATE  INDEX I_FK_THESE_ANNEE1
     ON THESE (NUM_ANNEE_INSCRIPTION_ANNEE_3 ASC);

CREATE  INDEX I_FK_THESE_FINANCEMENT
     ON THESE (CODE_FINANCEMENT ASC);

CREATE  INDEX I_FK_THESE_ANNEE2
     ON THESE (NUM_ANNEE_INSCRIPTION_ANNEE_4 ASC);

CREATE  INDEX I_FK_THESE_DISCIPLINES
     ON THESE (CODE_DISCIPLINE ASC);

# -----------------------------------------------------------------------------
#       TABLE : MENTIONS
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS MENTIONS
 (
   NUM_MENTION INT(2) NOT NULL  ,
   NOM_MENTION CLOB NULL  
   , PRIMARY KEY (NUM_MENTION) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : COURS_EDST
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS COURS_EDST
 (
   NUM_COURS_EDST INT(5) NOT NULL  ,
   NUM_DEA_LOCAUX INT(5) NOT NULL  ,
   COURS_CD_OU_MS INT(1) NOT NULL  ,
   CODE_COURS_EDST CHAR(32) NOT NULL  ,
   ENSEIGNANT_RESPONSABLE_COURS_EDST CLOB NULL  ,
   TELEPHONE_ENSEIGNANT_RESPONSABLE_COURS_EDST INT(10) NULL  ,
   E_MAIL_ENSEIGNANT_RESPONSABLE_COURS_EDST CLOB NULL  ,
   DESCRIPTIF_MODULE_COURS_EDST CLOB NULL  ,
   CODE_DEA_COURS_EDST CHAR(32) NULL  ,
   VISIBILITE_COURS_EDST INT(1) NOT NULL  
   , PRIMARY KEY (NUM_COURS_EDST) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE COURS_EDST
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_COURS_EDST_DEA_LOCAUX
     ON COURS_EDST (NUM_DEA_LOCAUX ASC);

# -----------------------------------------------------------------------------
#       TABLE : COMPOSANTES
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS COMPOSANTES
 (
   NUMERO_COMPOSANTE INT(2) NOT NULL  ,
   LIBELLE_COMPOSANTES CLOB NOT NULL  
   , PRIMARY KEY (NUMERO_COMPOSANTE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : DIRECTEUR_THESE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS DIRECTEUR_THESE
 (
   NUM_DIRECTEUR_THESE INT(2) NOT NULL  ,
   NUM_CIVILITE CHAR(32) NOT NULL  ,
   NOM_DT CLOB NOT NULL  ,
   PRENOM_DT CLOB NOT NULL  ,
   CIVILITE_DT CLOB NOT NULL  ,
   ABREGE_DT CLOB NULL  ,
   TELEPHONE_DT CHAR(32) NULL  ,
   TELEPHONE2_DT CHAR(32) NULL  ,
   FAX_DT INT(10) NULL  ,
   E_MAIL_DT CHAR(100) NULL  
   , PRIMARY KEY (NUM_DIRECTEUR_THESE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE DIRECTEUR_THESE
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_DIRECTEUR_THESE_CIVILITE
     ON DIRECTEUR_THESE (NUM_CIVILITE ASC);

# -----------------------------------------------------------------------------
#       TABLE : DIPLOME
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS DIPLOME
 (
   NUMERO_DIPLOME INT(2) NOT NULL  ,
   DIPLOME_COMPLEMENTAIRE INT(1) NOT NULL  ,
   DIPLOME_INSCRIPTION INT(1) NOT NULL  ,
   LIBELLE_DIPLOME CLOB NULL  
   , PRIMARY KEY (NUMERO_DIPLOME) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : PARCOURS_DE_THESE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PARCOURS_DE_THESE
 (
   NUMERO_PARCOURS_THESE CHAR(32) NOT NULL  ,
   NUMERO_CHOIX_ANNEE INT(2) NOT NULL  ,
   NUMERO_CHOIX_ANNEE_ANNEE2 INT(2) NOT NULL  ,
   NUMERO_CHOIX_ANNEE_ANNEE3 INT(2) NOT NULL  ,
   NUMERO_PRE_THESE CHAR(32) NOT NULL  ,
   NUMERO_SOUTENANCE INT(2) NOT NULL  ,
   PRE_THESE CHAR(32) NULL  ,
   SOUTENANCE CHAR(32) NULL  ,
   ANNEE1 CHAR(32) NULL  ,
   ANNEE2 CHAR(32) NULL  ,
   ANNEE3 CHAR(32) NULL  
   , PRIMARY KEY (NUMERO_PARCOURS_THESE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE PARCOURS_DE_THESE
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_PARCOURS_DE_THESE_CHOIX_ANNEE
     ON PARCOURS_DE_THESE (NUMERO_CHOIX_ANNEE ASC);

CREATE  INDEX I_FK_PARCOURS_DE_THESE_CHOIX_ANNEE1
     ON PARCOURS_DE_THESE (NUMERO_CHOIX_ANNEE_ANNEE2 ASC);

CREATE  INDEX I_FK_PARCOURS_DE_THESE_CHOIX_ANNEE2
     ON PARCOURS_DE_THESE (NUMERO_CHOIX_ANNEE_ANNEE3 ASC);

CREATE  INDEX I_FK_PARCOURS_DE_THESE_PRE_THESE
     ON PARCOURS_DE_THESE (NUMERO_PRE_THESE ASC);

CREATE  INDEX I_FK_PARCOURS_DE_THESE_SOUTENANCE
     ON PARCOURS_DE_THESE (NUMERO_SOUTENANCE ASC);

# -----------------------------------------------------------------------------
#       TABLE : DEA_LOCAUX
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS DEA_LOCAUX
 (
   NUM_DEA_LOCAUX INT(5) NOT NULL  ,
   CODE_NATIONAL_DEA CHAR(32) NULL  ,
   INTITULE_DEA_LOCAL CLOB NOT NULL  
   , PRIMARY KEY (NUM_DEA_LOCAUX) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : SECTEUR_ACTIVITE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS SECTEUR_ACTIVITE
 (
   NUMERO_SECTEUR_ACTIVITE INT(2) NOT NULL  ,
   CODE_ACTIVITE CHAR(32) NOT NULL  ,
   LIBELLE_ACTIVITE CLOB NULL  
   , PRIMARY KEY (NUMERO_SECTEUR_ACTIVITE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : PRE_THESE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PRE_THESE
 (
   NUMERO_PRE_THESE CHAR(32) NOT NULL  ,
   NUM_PROFESSION_AVANT_THESE INT(5) NOT NULL  ,
   NUMERO_DIPLOME INT(2) NOT NULL  ,
   NUMERO_DIPLOME_DIPLOME_INSCRIPTION INT(2) NOT NULL  ,
   PROFESSION_ANTERIEURE CLOB NULL  ,
   DIPLOME_INSCRIPTION CHAR(32) NULL  ,
   DIPLOME_COMPLEMENTAIRE CHAR(32) NULL  ,
   NUMERO_DEA CHAR(32) NULL  ,
   LIBELLE_DEA CLOB NULL  ,
   ANNE_DEA INT(4) NULL  ,
   UNIVERSITE_DEA CLOB NULL  ,
   MOYENNE_DEA INT(10,2) NULL  ,
   CLASSEMENT_DEA INT(2) NULL  ,
   EFFECTIF_DEA INT(2) NULL  
   , PRIMARY KEY (NUMERO_PRE_THESE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE PRE_THESE
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_PRE_THESE_PROFESSION_AVANT
     ON PRE_THESE (NUM_PROFESSION_AVANT_THESE ASC);

CREATE  INDEX I_FK_PRE_THESE_DIPLOME
     ON PRE_THESE (NUMERO_DIPLOME ASC);

CREATE  INDEX I_FK_PRE_THESE_DIPLOME1
     ON PRE_THESE (NUMERO_DIPLOME_DIPLOME_INSCRIPTION ASC);

# -----------------------------------------------------------------------------
#       TABLE : PROFESSION_AVANT
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS PROFESSION_AVANT
 (
   NUM_PROFESSION_AVANT_THESE INT(5) NOT NULL  ,
   PROFESSION_ANTERIEURE CHAR(32) NOT NULL  
   , PRIMARY KEY (NUM_PROFESSION_AVANT_THESE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       TABLE : THESARD_LABORATOIRE
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS THESARD_LABORATOIRE
 (
   NUMERO_THESARD_LABORATOIRE CHAR(32) NOT NULL  ,
   NUM_LABORATOIRE INT(5) NOT NULL  ,
   NUM_DIRECTEUR_THESE INT(2) NOT NULL  ,
   NUM_DIRECTEUR_THESE_CODE_DIRECTEUR_THESARD_LABORATOIRE INT(2) NOT NULL  ,
   NOM_LABORATOIRE_THESARD CLOB NULL  ,
   TELEPHONE_THESARD_LABORATOIRE CHAR(32) NULL  ,
   POSTE_THESARD_LABORATOIRE CHAR(32) NULL  ,
   FAX_THESARD_LABORATOIRE CHAR(32) NULL  ,
   E_MAIL_THESARD_LABORATOIRE CLOB NULL  ,
   CODE_DIRECTEUR_THESARD_LABORATOIRE CHAR(32) NULL  ,
   CODE_CO_DIRECTEUR_THESARD_LABORATOIRE CHAR(32) NULL  ,
   LABORATOIRE_EXERCICE CHAR(32) NULL  
   , PRIMARY KEY (NUMERO_THESARD_LABORATOIRE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE THESARD_LABORATOIRE
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_THESARD_LABORATOIRE_LABORATOIRE
     ON THESARD_LABORATOIRE (NUM_LABORATOIRE ASC);

CREATE  INDEX I_FK_THESARD_LABORATOIRE_DIRECTEUR_THESE
     ON THESARD_LABORATOIRE (NUM_DIRECTEUR_THESE ASC);

CREATE  INDEX I_FK_THESARD_LABORATOIRE_DIRECTEUR_THESE1
     ON THESARD_LABORATOIRE (NUM_DIRECTEUR_THESE_CODE_DIRECTEUR_THESARD_LABORATOIRE ASC);

# -----------------------------------------------------------------------------
#       TABLE : CHOIX_1__2__3___CD__MS__CS
# -----------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS CHOIX_1__2__3___CD__MS__CS
 (
   NUM_COURS_EDST INT(5) NOT NULL  ,
   NUMERO_CHOIX_ANNEE INT(2) NOT NULL  
   , PRIMARY KEY (NUM_COURS_EDST,NUMERO_CHOIX_ANNEE) 
 ) 
 comment = "";

# -----------------------------------------------------------------------------
#       INDEX DE LA TABLE CHOIX_1__2__3___CD__MS__CS
# -----------------------------------------------------------------------------


CREATE  INDEX I_FK_CHOIX_1__2__3___CD__MS__CS_COURS_EDST
     ON CHOIX_1__2__3___CD__MS__CS (NUM_COURS_EDST ASC);

CREATE  INDEX I_FK_CHOIX_1__2__3___CD__MS__CS_CHOIX_ANNEE
     ON CHOIX_1__2__3___CD__MS__CS (NUMERO_CHOIX_ANNEE ASC);


# -----------------------------------------------------------------------------
#       CREATION DES REFERENCES DE TABLE
# -----------------------------------------------------------------------------


ALTER TABLE SOUTENANCE 
  ADD FOREIGN KEY FK_SOUTENANCE_MENTIONS (NUM_MENTION)
      REFERENCES MENTIONS (NUM_MENTION) ;


ALTER TABLE POST_DOCTORAT 
  ADD FOREIGN KEY FK_POST_DOCTORAT_ANNEE_POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT)
      REFERENCES ANNEE_POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT) ;


ALTER TABLE POST_DOCTORAT 
  ADD FOREIGN KEY FK_POST_DOCTORAT_SECTION_CNU (CODE_CNU)
      REFERENCES SECTION_CNU (CODE_CNU) ;


ALTER TABLE POST_DOCTORAT 
  ADD FOREIGN KEY FK_POST_DOCTORAT_ANNEE_POST_DOCTORAT1 (NUMERO_ANNEE_POST_DOCTORAT_ANNNEE_T2)
      REFERENCES ANNEE_POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT) ;


ALTER TABLE THESARD 
  ADD FOREIGN KEY FK_THESARD_THESARD_LABORATOIRE (NUMERO_THESARD_LABORATOIRE)
      REFERENCES THESARD_LABORATOIRE (NUMERO_THESARD_LABORATOIRE) ;


ALTER TABLE THESARD 
  ADD FOREIGN KEY FK_THESARD_PAYS (CODE_PAYS)
      REFERENCES PAYS (CODE_PAYS) ;


ALTER TABLE THESARD 
  ADD FOREIGN KEY FK_THESARD_CIVILITE (NUM_CIVILITE)
      REFERENCES CIVILITE (NUM_CIVILITE) ;


ALTER TABLE THESARD 
  ADD FOREIGN KEY FK_THESARD_ANNEE (NUM_ANNEE)
      REFERENCES ANNEE (NUM_ANNEE) ;


ALTER TABLE THESARD 
  ADD FOREIGN KEY FK_THESARD_THESE (NUMERO_THESE)
      REFERENCES THESE (NUMERO_THESE) ;


ALTER TABLE THESARD 
  ADD FOREIGN KEY FK_THESARD_POST_DOCTORAT (NUMERO_POST_DOCTORAT)
      REFERENCES POST_DOCTORAT (NUMERO_POST_DOCTORAT) ;


ALTER TABLE THESARD 
  ADD FOREIGN KEY FK_THESARD_PARCOURS_DE_THESE (NUMERO_PARCOURS_THESE)
      REFERENCES PARCOURS_DE_THESE (NUMERO_PARCOURS_THESE) ;


ALTER TABLE ANNEE_POST_DOCTORAT 
  ADD FOREIGN KEY FK_ANNEE_POST_DOCTORAT_PAYS (CODE_PAYS)
      REFERENCES PAYS (CODE_PAYS) ;


ALTER TABLE ANNEE_POST_DOCTORAT 
  ADD FOREIGN KEY FK_ANNEE_POST_DOCTORAT_PROFESSION_DOCTORALE (CODE_PROFESSION_INSEE)
      REFERENCES PROFESSION_DOCTORALE (CODE_PROFESSION_INSEE) ;


ALTER TABLE ANNEE_POST_DOCTORAT 
  ADD FOREIGN KEY FK_ANNEE_POST_DOCTORAT_FONCTIONS (NUMERO_FONCTION)
      REFERENCES FONCTIONS (NUMERO_FONCTION) ;


ALTER TABLE ANNEE_POST_DOCTORAT 
  ADD FOREIGN KEY FK_ANNEE_POST_DOCTORAT_SECTEUR_ACTIVITE (NUMERO_SECTEUR_ACTIVITE)
      REFERENCES SECTEUR_ACTIVITE (NUMERO_SECTEUR_ACTIVITE) ;


ALTER TABLE LABORATOIRE 
  ADD FOREIGN KEY FK_LABORATOIRE_COMPOSANTES (NUMERO_COMPOSANTE)
      REFERENCES COMPOSANTES (NUMERO_COMPOSANTE) ;


ALTER TABLE LABORATOIRE 
  ADD FOREIGN KEY FK_LABORATOIRE_CIVILITE (NUM_CIVILITE)
      REFERENCES CIVILITE (NUM_CIVILITE) ;


ALTER TABLE LABORATOIRE 
  ADD FOREIGN KEY FK_LABORATOIRE_TYPE_EQUIPE (NUM_TYPE)
      REFERENCES TYPE_EQUIPE (NUM_TYPE) ;


ALTER TABLE THESE 
  ADD FOREIGN KEY FK_THESE_ANNEE (NUM_ANNEE)
      REFERENCES ANNEE (NUM_ANNEE) ;


ALTER TABLE THESE 
  ADD FOREIGN KEY FK_THESE_ANNEE1 (NUM_ANNEE_INSCRIPTION_ANNEE_3)
      REFERENCES ANNEE (NUM_ANNEE) ;


ALTER TABLE THESE 
  ADD FOREIGN KEY FK_THESE_FINANCEMENT (CODE_FINANCEMENT)
      REFERENCES FINANCEMENT (CODE_FINANCEMENT) ;


ALTER TABLE THESE 
  ADD FOREIGN KEY FK_THESE_ANNEE2 (NUM_ANNEE_INSCRIPTION_ANNEE_4)
      REFERENCES ANNEE (NUM_ANNEE) ;


ALTER TABLE THESE 
  ADD FOREIGN KEY FK_THESE_DISCIPLINES (CODE_DISCIPLINE)
      REFERENCES DISCIPLINES (CODE_DISCIPLINE) ;


ALTER TABLE COURS_EDST 
  ADD FOREIGN KEY FK_COURS_EDST_DEA_LOCAUX (NUM_DEA_LOCAUX)
      REFERENCES DEA_LOCAUX (NUM_DEA_LOCAUX) ;


ALTER TABLE DIRECTEUR_THESE 
  ADD FOREIGN KEY FK_DIRECTEUR_THESE_CIVILITE (NUM_CIVILITE)
      REFERENCES CIVILITE (NUM_CIVILITE) ;


ALTER TABLE PARCOURS_DE_THESE 
  ADD FOREIGN KEY FK_PARCOURS_DE_THESE_CHOIX_ANNEE (NUMERO_CHOIX_ANNEE)
      REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE) ;


ALTER TABLE PARCOURS_DE_THESE 
  ADD FOREIGN KEY FK_PARCOURS_DE_THESE_CHOIX_ANNEE1 (NUMERO_CHOIX_ANNEE_ANNEE2)
      REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE) ;


ALTER TABLE PARCOURS_DE_THESE 
  ADD FOREIGN KEY FK_PARCOURS_DE_THESE_CHOIX_ANNEE2 (NUMERO_CHOIX_ANNEE_ANNEE3)
      REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE) ;


ALTER TABLE PARCOURS_DE_THESE 
  ADD FOREIGN KEY FK_PARCOURS_DE_THESE_PRE_THESE (NUMERO_PRE_THESE)
      REFERENCES PRE_THESE (NUMERO_PRE_THESE) ;


ALTER TABLE PARCOURS_DE_THESE 
  ADD FOREIGN KEY FK_PARCOURS_DE_THESE_SOUTENANCE (NUMERO_SOUTENANCE)
      REFERENCES SOUTENANCE (NUMERO_SOUTENANCE) ;


ALTER TABLE PRE_THESE 
  ADD FOREIGN KEY FK_PRE_THESE_PROFESSION_AVANT (NUM_PROFESSION_AVANT_THESE)
      REFERENCES PROFESSION_AVANT (NUM_PROFESSION_AVANT_THESE) ;


ALTER TABLE PRE_THESE 
  ADD FOREIGN KEY FK_PRE_THESE_DIPLOME (NUMERO_DIPLOME)
      REFERENCES DIPLOME (NUMERO_DIPLOME) ;


ALTER TABLE PRE_THESE 
  ADD FOREIGN KEY FK_PRE_THESE_DIPLOME1 (NUMERO_DIPLOME_DIPLOME_INSCRIPTION)
      REFERENCES DIPLOME (NUMERO_DIPLOME) ;


ALTER TABLE THESARD_LABORATOIRE 
  ADD FOREIGN KEY FK_THESARD_LABORATOIRE_LABORATOIRE (NUM_LABORATOIRE)
      REFERENCES LABORATOIRE (NUM_LABORATOIRE) ;


ALTER TABLE THESARD_LABORATOIRE 
  ADD FOREIGN KEY FK_THESARD_LABORATOIRE_DIRECTEUR_THESE (NUM_DIRECTEUR_THESE)
      REFERENCES DIRECTEUR_THESE (NUM_DIRECTEUR_THESE) ;


ALTER TABLE THESARD_LABORATOIRE 
  ADD FOREIGN KEY FK_THESARD_LABORATOIRE_DIRECTEUR_THESE1 (NUM_DIRECTEUR_THESE_CODE_DIRECTEUR_THESARD_LABORATOIRE)
      REFERENCES DIRECTEUR_THESE (NUM_DIRECTEUR_THESE) ;


ALTER TABLE CHOIX_1__2__3___CD__MS__CS 
  ADD FOREIGN KEY FK_CHOIX_1__2__3___CD__MS__CS_COURS_EDST (NUM_COURS_EDST)
      REFERENCES COURS_EDST (NUM_COURS_EDST) ;


ALTER TABLE CHOIX_1__2__3___CD__MS__CS 
  ADD FOREIGN KEY FK_CHOIX_1__2__3___CD__MS__CS_CHOIX_ANNEE (NUMERO_CHOIX_ANNEE)
      REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE) ;

