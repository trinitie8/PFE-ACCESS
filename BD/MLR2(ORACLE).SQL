-- -----------------------------------------------------------------------------
--             Génération d'une base de données pour
--                      Oracle Version 10g
--                        (19/4/2018 16:33:48)
-- -----------------------------------------------------------------------------
--      Nom de la base : MLR1
--      Projet : 
--      Auteur : pole info
--      Date de dernière modification : 19/4/2018 16:32:22
-- -----------------------------------------------------------------------------

/*DROP TABLE SOUTENANCE CASCADE CONSTRAINTS;

DROP TABLE PROFESSION_DOCTORALE CASCADE CONSTRAINTS;

DROP TABLE CHOIX_ANNEE CASCADE CONSTRAINTS;

DROP TABLE DISCIPLINES CASCADE CONSTRAINTS;

DROP TABLE FINANCEMENT CASCADE CONSTRAINTS;

DROP TABLE PAYS CASCADE CONSTRAINTS;

DROP TABLE POST_DOCTORAT CASCADE CONSTRAINTS;

DROP TABLE SECTION_CNU CASCADE CONSTRAINTS;

DROP TABLE THESARD CASCADE CONSTRAINTS;

DROP TABLE ANNEE_POST_DOCTORAT CASCADE CONSTRAINTS;

DROP TABLE CIVILITE CASCADE CONSTRAINTS;

DROP TABLE TYPE_EQUIPE CASCADE CONSTRAINTS;

DROP TABLE LABORATOIRE CASCADE CONSTRAINTS;

DROP TABLE ANNEE CASCADE CONSTRAINTS;

DROP TABLE FONCTIONS CASCADE CONSTRAINTS;

DROP TABLE THESE CASCADE CONSTRAINTS;

DROP TABLE MENTIONS CASCADE CONSTRAINTS;

DROP TABLE COURS_EDST CASCADE CONSTRAINTS;

DROP TABLE COMPOSANTES CASCADE CONSTRAINTS;

DROP TABLE DIRECTEUR_THESE CASCADE CONSTRAINTS;

DROP TABLE DIPLOME CASCADE CONSTRAINTS;

DROP TABLE PARCOURS_DE_THESE CASCADE CONSTRAINTS;

DROP TABLE DEA_LOCAUX CASCADE CONSTRAINTS;

DROP TABLE SECTEUR_ACTIVITE CASCADE CONSTRAINTS;

DROP TABLE PRE_THESE CASCADE CONSTRAINTS;

DROP TABLE PROFESSION_AVANT CASCADE CONSTRAINTS;

DROP TABLE THESARD_LABORATOIRE CASCADE CONSTRAINTS;

DROP TABLE CHOIX_1__2__3___CD__MS__CS CASCADE CONSTRAINTS;*/

-- -----------------------------------------------------------------------------
--       CREATION DE LA BASE 
-- -----------------------------------------------------------------------------

DROP DATABASE IF EXISTS bd_o2084311;

CREATE DATABASE bd_o2084311;

USE bd_o2084311;

-- -----------------------------------------------------------------------------
--       TABLE : SOUTENANCE
-- -----------------------------------------------------------------------------

CREATE TABLE SOUTENANCE
   (
    NUMERO_SOUTENANCE INT(2)  NOT NULL,
    NUM_MENTION INT(2)  NOT NULL,
    INSCRIPTION_SOUTENANCE INT(1)  NOT NULL,
    DESIGNATION_RAPPORTEURS INT(1)  NOT NULL,
    COMPOSITION_JURY INT(1)  NOT NULL,
    RAPPORT_DONNEE_BUREAU DATE  NULL,
    RAPPORT_RECU INT(1)  NOT NULL,
    BUREAU_JURY DATE  NULL,
    INTITULE_DOCTORAT VARCHAR(50)  NULL,
    NUMERO_DOCTORAT INT(2)  NULL,
    MENTION_SOUTENANCE VARCHAR(50)  NULL
,   CONSTRAINT PK_SOUTENANCE PRIMARY KEY (NUMERO_SOUTENANCE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE SOUTENANCE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_SOUTENANCE_MENTIONS
     ON SOUTENANCE (NUM_MENTION ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : PROFESSION_DOCTORALE
-- -----------------------------------------------------------------------------

CREATE TABLE PROFESSION_DOCTORALE
   (
    CODE_PROFESSION_INSEE INT(5)  NOT NULL,
    PROFESSION_INSEE INT(5)  NOT NULL
,   CONSTRAINT PK_PROFESSION_DOCTORALE PRIMARY KEY (CODE_PROFESSION_INSEE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : CHOIX_ANNEE
-- -----------------------------------------------------------------------------

CREATE TABLE CHOIX_ANNEE
   (
    NUMERO_CHOIX_ANNEE INT(2)  NOT NULL,
    CHOIX_1_CD CHAR(32)  NULL,
    CHOIX_2_CD CHAR(32)  NULL,
    CHOIX_3_CD CHAR(32)  NULL,
    CHOIX_1_MS CHAR(32)  NULL,
    CHOIX_2_MS CHAR(32)  NULL,
    CHOIX_3_MS CHAR(32)  NULL,
    CHOIX_1_CS CHAR(32)  NULL,
    CHOIX_2_CS CHAR(32)  NULL,
    CHOIX_3_CS CHAR(32)  NULL,
    CD CHAR(32)  NULL,
    MS CHAR(32)  NULL,
    CS CHAR(32)  NULL,
    CD_VALIDE INT(1)  NULL,
    MS_VALIDE INT(1)  NULL,
    CS_VALIDE INT(1)  NULL,
    COMMENTAIRE VARCHAR(50)  NULL
,   CONSTRAINT PK_CHOIX_ANNEE PRIMARY KEY (NUMERO_CHOIX_ANNEE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : DISCIPLINES
-- -----------------------------------------------------------------------------

CREATE TABLE DISCIPLINES
   (
    CODE_DISCIPLINE INT(4)  NOT NULL,
    NOM_DISCIPLINE VARCHAR(50)  NOT NULL,
    CODE_DS_DISCIPLINE INT(5)  NOT NULL,
    CODE_RSD_DISCIPLINE INT(2)  NOT NULL,
    REGROUPEMENT_SECTION_DISCIPLIN VARCHAR(50)  NOT NULL
,   CONSTRAINT PK_DISCIPLINES PRIMARY KEY (CODE_DISCIPLINE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : FINANCEMENT
-- -----------------------------------------------------------------------------

CREATE TABLE FINANCEMENT
   (
    CODE_FINANCEMENT CHAR(32)  NOT NULL,
    FINANCEMENT CHAR(32)  NULL
,   CONSTRAINT PK_FINANCEMENT PRIMARY KEY (CODE_FINANCEMENT)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : PAYS
-- -----------------------------------------------------------------------------

CREATE TABLE PAYS
   (
    CODE_PAYS INT(2)  NOT NULL,
    NOM_PAYS VARCHAR(50)  NOT NULL,
    ORDRE INT(2)  NOT NULL
,   CONSTRAINT PK_PAYS PRIMARY KEY (CODE_PAYS)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : POST_DOCTORAT
-- -----------------------------------------------------------------------------

CREATE TABLE POST_DOCTORAT
   (
    NUMERO_POST_DOCTORAT CHAR(32)  NOT NULL,
    NUMERO_ANNEE_POST_DOCTORAT CHAR(32)  NOT NULL,
    CODE_CNU INT(2)  NOT NULL,
    NUMERO_ANNEE_POST_DOCTORAT_ANN CHAR(32)  NOT NULL,
    ATER INT(1)  NOT NULL,
    FORMATION_COMPLEMENTAIRE INT(2)  NULL,
    LIBELLE_FORMATION_COMPLEMENTAI VARCHAR(50)  NULL,
    NOMBRE_HEURE_FORMATION INT(2)  NULL,
    DUREE_POST_DOC INT(2)  NULL,
    PAYS_POST_DOC VARCHAR(50)  NULL,
    QUALIFICATION_CNU INT(2)  NULL,
    SECTION_QUALIFICATION CHAR(32)  NULL,
    ANNEE_T2 CHAR(32)  NULL,
    ANNEE_T3 CHAR(32)  NULL
,   CONSTRAINT PK_POST_DOCTORAT PRIMARY KEY (NUMERO_POST_DOCTORAT)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE POST_DOCTORAT
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_POST_DOCTORAT_ANNEE_POST_
     ON POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT ASC)
    ;

CREATE  INDEX I_FK_POST_DOCTORAT_SECTION_CNU
     ON POST_DOCTORAT (CODE_CNU ASC)
    ;

CREATE  INDEX I_FK_POST_DOCTORAT_ANNEE_POST1
     ON POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT_ANN ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : SECTION_CNU
-- -----------------------------------------------------------------------------

CREATE TABLE SECTION_CNU
   (
    CODE_CNU INT(2)  NOT NULL,
    CODE_DNS INT(2)  NULL,
    SECTION_CNU CHAR(32)  NOT NULL
,   CONSTRAINT PK_SECTION_CNU PRIMARY KEY (CODE_CNU)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : THESARD
-- -----------------------------------------------------------------------------

CREATE TABLE THESARD
   (
    NUM_THESARD INT(2)  NOT NULL,
    NUMERO_THESARD_LABORATOIRE CHAR(32)  NOT NULL,
    CODE_PAYS INT(2)  NOT NULL,
    NUM_CIVILITE CHAR(32)  NOT NULL,
    NUM_ANNEE INT(2)  NOT NULL,
    NUMERO_THESE INT(2)  NOT NULL,
    NUMERO_POST_DOCTORAT CHAR(32)  NULL,
    NUMERO_PARCOURS_THESE CHAR(32)  NOT NULL,
    NOM_THESARD VARCHAR(50)  NOT NULL,
    PRENOM_THESARD VARCHAR(50)  NOT NULL,
    DATE_NIASSANCE_THESARD DATE  NULL,
    NOM_EPOUSE_THESARD VARCHAR(50)  NULL,
    SEXE CHAR(1)  NOT NULL,
    CODE_APOGEE_THESARD INT(10)  NULL,
    ANNEE_INSCRIPTION_THESE INT(4)  NULL,
    PAYS_THESARD VARCHAR(50)  NULL,
    ADRESSE_RUE_THESARD VARCHAR(50)  NULL,
    ADRESSE_RESIDENCE_THESARD VARCHAR(50)  NULL,
    ADRESSE_CODE_POSTALE_THESARD INT(5)  NULL,
    ADRESSE_VILLE_THESARD VARCHAR(50)  NULL,
    TELEPHONE_PERSONNEL_THESARD CHAR(32)  NULL,
    TELEPHONE_FAX_THESARD CHAR(32)  NULL,
    E_MAIL_PERSONNEL_THESARD VARCHAR(50)  NULL,
    PAGE_WEB_PERSONNELLE_THESARD VARCHAR(50)  NULL,
    NOM_PARENTS_THESARD VARCHAR(50)  NULL,
    ADRESSE_PARENTS_THESARD VARCHAR(50)  NULL,
    ADRESSE_RUE_PARENTS_THESARD VARCHAR(50)  NULL,
    ADRESSE_CODE_POSTAL_PARENTS_TH INT(5)  NULL,
    ADRESSE_VILLE_PARENTS_THESARD VARCHAR(50)  NULL,
    DONNEES_PUBLIABLES_THESARD INT(1)  NOT NULL,
    PHOTO_THESARD TEXT(50)  NULL,
    PRESENCE_THESARD INT(2)  NULL,
    SELECTION_THESARD INT(2)  NULL,
    RETARD_INSCRIPTION_THESARD INT(1)  NULL,
    TRI_THESARD INT(1)  NULL,
    NOMBRE_COURS_VALIDE_THESARD INT(2)  NULL,
    ENSEMBLE_COURS_VALIDE_THESARD INT(1)  NOT NULL,
    EMARGEMENT_THESARD VARCHAR(50)  NULL,
    DOSSIER_THESARD CHAR(32)  NULL,
    FIRCHE_RENSEIGNEMENT_THESARD CHAR(32)  NULL,
    LETTRE_REUNION_THESARD VARCHAR(50)  NULL,
    THESE CHAR(32)  NULL,
    CIVILITE_THESARD CHAR(32)  NULL,
    POST_DOC_THESARD CHAR(32)  NULL,
    INFORMATIONS_THESARD_LABORATOI CHAR(32)  NULL
,   CONSTRAINT PK_THESARD PRIMARY KEY (NUM_THESARD)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE THESARD
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_THESARD_THESARD_LABORATOI
     ON THESARD (NUMERO_THESARD_LABORATOIRE ASC)
    ;

CREATE  INDEX I_FK_THESARD_PAYS
     ON THESARD (CODE_PAYS ASC)
    ;

CREATE  INDEX I_FK_THESARD_CIVILITE
     ON THESARD (NUM_CIVILITE ASC)
    ;

CREATE  INDEX I_FK_THESARD_ANNEE
     ON THESARD (NUM_ANNEE ASC)
    ;

CREATE  INDEX I_FK_THESARD_THESE
     ON THESARD (NUMERO_THESE ASC)
    ;

CREATE  INDEX I_FK_THESARD_POST_DOCTORAT
     ON THESARD (NUMERO_POST_DOCTORAT ASC)
    ;

CREATE  INDEX I_FK_THESARD_PARCOURS_DE_THESE
     ON THESARD (NUMERO_PARCOURS_THESE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : ANNEE_POST_DOCTORAT
-- -----------------------------------------------------------------------------

CREATE TABLE ANNEE_POST_DOCTORAT
   (
    NUMERO_ANNEE_POST_DOCTORAT CHAR(32)  NOT NULL,
    CODE_PAYS INT(2)  NOT NULL,
    CODE_PROFESSION_INSEE INT(5)  NOT NULL,
    NUMERO_FONCTION INT(2)  NOT NULL,
    NUMERO_SECTEUR_ACTIVITE INT(2)  NOT NULL,
    SITUATION_DOCTEUR CHAR(32)  NULL,
    PROFESSION_DOCTEUR CHAR(32)  NULL,
    CODE_PROFESSION CHAR(32)  NULL,
    SECTEUR_ACTIVITE CHAR(32)  NULL,
    TRAVAIL_FRANCE INT(1)  NULL,
    DEPARTEMENT_FRANCE CHAR(32)  NULL,
    DETERMINANT_EMBAUCHE INT(1)  NULL,
    PAYS_POUR_ETRANGER CHAR(32)  NULL,
    SALAIRE_MENSUEL CHAR(32)  NULL,
    DATE_RECRUTEMENT DATE  NULL
,   CONSTRAINT PK_ANNEE_POST_DOCTORAT PRIMARY KEY (NUMERO_ANNEE_POST_DOCTORAT)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE ANNEE_POST_DOCTORAT
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_PAYS
     ON ANNEE_POST_DOCTORAT (CODE_PAYS ASC)
    ;

CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_PROFE
     ON ANNEE_POST_DOCTORAT (CODE_PROFESSION_INSEE ASC)
    ;

CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_FONCT
     ON ANNEE_POST_DOCTORAT (NUMERO_FONCTION ASC)
    ;

CREATE  INDEX I_FK_ANNEE_POST_DOCTORAT_SECTE
     ON ANNEE_POST_DOCTORAT (NUMERO_SECTEUR_ACTIVITE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : CIVILITE
-- -----------------------------------------------------------------------------

CREATE TABLE CIVILITE
   (
    NUM_CIVILITE CHAR(32)  NOT NULL,
    CIVILITE VARCHAR(50)  NOT NULL
,   CONSTRAINT PK_CIVILITE PRIMARY KEY (NUM_CIVILITE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : TYPE_EQUIPE
-- -----------------------------------------------------------------------------

CREATE TABLE TYPE_EQUIPE
   (
    NUM_TYPE INT(5)  NOT NULL,
    TYPE_EQUIPE VARCHAR(50)  NOT NULL,
    ORGANISME CHAR(32)  NULL
,   CONSTRAINT PK_TYPE_EQUIPE PRIMARY KEY (NUM_TYPE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : LABORATOIRE
-- -----------------------------------------------------------------------------

CREATE TABLE LABORATOIRE
   (
    NUM_LABORATOIRE INT(5)  NOT NULL,
    NUMERO_COMPOSANTE INT(2)  NOT NULL,
    NUM_CIVILITE CHAR(32)  NOT NULL,
    NUM_TYPE INT(5)  NOT NULL,
    PRIORITAIRE INT(1)  NOT NULL,
    ABREGE_LABORATOIRE CHAR(32)  NOT NULL,
    NOM_LABORATOIRE CHAR(32)  NOT NULL,
    TYPE_EQUIPE CHAR(32)  NULL,
    NUMERO_DE_LABORATOIRE CHAR(32)  NULL,
    COMPOSANTE_RATACHEMENT CHAR(32)  NULL,
    RUE_LABORATOIRE CHAR(32)  NULL,
    CODE_POSTALE_LABORATOIRE INT(2)  NULL,
    VILLE_LABORATOIRE VARCHAR(50)  NULL,
    TELEPHONE_LABORATOIRE CHAR(32)  NULL,
    FAX_LABORATOIRE CHAR(32)  NULL,
    CIVILITE_DIRECTEUR_LABORATOIRE CHAR(5)  NULL,
    NOM_DIRECTEUR_LABORATOIRE VARCHAR(50)  NULL
,   CONSTRAINT PK_LABORATOIRE PRIMARY KEY (NUM_LABORATOIRE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE LABORATOIRE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_LABORATOIRE_COMPOSANTES
     ON LABORATOIRE (NUMERO_COMPOSANTE ASC)
    ;

CREATE  INDEX I_FK_LABORATOIRE_CIVILITE
     ON LABORATOIRE (NUM_CIVILITE ASC)
    ;

CREATE  INDEX I_FK_LABORATOIRE_TYPE_EQUIPE
     ON LABORATOIRE (NUM_TYPE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : ANNEE
-- -----------------------------------------------------------------------------

CREATE TABLE ANNEE
   (
    NUM_ANNEE INT(2)  NOT NULL,
    ANNEE INT(2)  NOT NULL
,   CONSTRAINT PK_ANNEE PRIMARY KEY (NUM_ANNEE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : FONCTIONS
-- -----------------------------------------------------------------------------

CREATE TABLE FONCTIONS
   (
    NUMERO_FONCTION INT(2)  NOT NULL,
    ACTIVITE_FONCTION VARCHAR(50)  NOT NULL,
    LIBELLE_FONCTION VARCHAR(50)  NOT NULL
,   CONSTRAINT PK_FONCTIONS PRIMARY KEY (NUMERO_FONCTION)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : THESE
-- -----------------------------------------------------------------------------

CREATE TABLE THESE
   (
    NUMERO_THESE INT(2)  NOT NULL,
    NUM_ANNEE INT(2)  NOT NULL,
    NUM_ANNEE_INSCRIPTION_ANNEE_3 INT(2)  NOT NULL,
    CODE_FINANCEMENT CHAR(32)  NOT NULL,
    NUM_ANNEE_INSCRIPTION_ANNEE_4 INT(2)  NOT NULL,
    CODE_DISCIPLINE INT(4)  NOT NULL,
    SUJET_THESE VARCHAR(50)  NOT NULL,
    CO_TUTELLE_THESE INT(1)  NOT NULL,
    PAYS_CO_TUTELLE_THESE CHAR(32)  NULL,
    UNIVERSITE_CO_TUTELLE_THESE CHAR(32)  NULL,
    DATE_DEBUT_ALLOCATION_FINANCEM DATE  NULL,
    CODE_FINANCEMENT_THESE CHAR(32)  NULL,
    INFORMATIONS_COMPLEMENTAIRE_FI VARCHAR(50)  NULL,
    MONITEUR_CIES_FINANCEMENT INT(1)  NOT NULL,
    INSCRIPTION_ANNEE_2 CHAR(32)  NULL,
    INSCRIPTION_ANNEE_3 CHAR(32)  NULL,
    INSCRIPTION_ANNEE_4 CHAR(32)  NULL,
    AUTRES_INSCRIPTIONS VARCHAR(50)  NULL,
    LIEN_LABORATOIRE CHAR(32)  NULL,
    COMPOSANTE_INSCRIPTION CHAR(32)  NOT NULL,
    DISCIPLINE_THESE CHAR(32)  NULL,
    ABANDON_THESE INT(1)  NOT NULL
,   CONSTRAINT PK_THESE PRIMARY KEY (NUMERO_THESE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE THESE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_THESE_ANNEE
     ON THESE (NUM_ANNEE ASC)
    ;

CREATE  INDEX I_FK_THESE_ANNEE1
     ON THESE (NUM_ANNEE_INSCRIPTION_ANNEE_3 ASC)
    ;

CREATE  INDEX I_FK_THESE_FINANCEMENT
     ON THESE (CODE_FINANCEMENT ASC)
    ;

CREATE  INDEX I_FK_THESE_ANNEE2
     ON THESE (NUM_ANNEE_INSCRIPTION_ANNEE_4 ASC)
    ;

CREATE  INDEX I_FK_THESE_DISCIPLINES
     ON THESE (CODE_DISCIPLINE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : MENTIONS
-- -----------------------------------------------------------------------------

CREATE TABLE MENTIONS
   (
    NUM_MENTION INT(2)  NOT NULL,
    NOM_MENTION VARCHAR(50)  NULL
,   CONSTRAINT PK_MENTIONS PRIMARY KEY (NUM_MENTION)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : COURS_EDST
-- -----------------------------------------------------------------------------

CREATE TABLE COURS_EDST
   (
    NUM_COURS_EDST INT(5)  NOT NULL,
    NUM_DEA_LOCAUX INT(5)  NOT NULL,
    COURS_CD_OU_MS INT(1)  NOT NULL,
    CODE_COURS_EDST CHAR(32)  NOT NULL,
    ENSEIGNANT_RESPONSABLE_COURS_E VARCHAR(50)  NULL,
    TELEPHONE_ENSEIGNANT_RESPONSAB INT(10)  NULL,
    E_MAIL_ENSEIGNANT_RESPONSABLE_ VARCHAR(50)  NULL,
    DESCRIPTIF_MODULE_COURS_EDST VARCHAR(50)  NULL,
    CODE_DEA_COURS_EDST CHAR(32)  NULL,
    VISIBILITE_COURS_EDST INT(1)  NOT NULL
,   CONSTRAINT PK_COURS_EDST PRIMARY KEY (NUM_COURS_EDST)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE COURS_EDST
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_COURS_EDST_DEA_LOCAUX
     ON COURS_EDST (NUM_DEA_LOCAUX ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : COMPOSANTES
-- -----------------------------------------------------------------------------

CREATE TABLE COMPOSANTES
   (
    NUMERO_COMPOSANTE INT(2)  NOT NULL,
    LIBELLE_COMPOSANTES VARCHAR(50)  NOT NULL
,   CONSTRAINT PK_COMPOSANTES PRIMARY KEY (NUMERO_COMPOSANTE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : DIRECTEUR_THESE
-- -----------------------------------------------------------------------------

CREATE TABLE DIRECTEUR_THESE
   (
    NUM_DIRECTEUR_THESE INT(2)  NOT NULL,
    NUM_CIVILITE CHAR(32)  NOT NULL,
    NOM_DT VARCHAR(50)  NOT NULL,
    PRENOM_DT VARCHAR(50)  NOT NULL,
    CIVILITE_DT VARCHAR(50)  NOT NULL,
    ABREGE_DT VARCHAR(50)  NULL,
    TELEPHONE_DT CHAR(32)  NULL,
    TELEPHONE2_DT CHAR(32)  NULL,
    FAX_DT INT(10)  NULL,
    E_MAIL_DT CHAR(100)  NULL
,   CONSTRAINT PK_DIRECTEUR_THESE PRIMARY KEY (NUM_DIRECTEUR_THESE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE DIRECTEUR_THESE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_DIRECTEUR_THESE_CIVILITE
     ON DIRECTEUR_THESE (NUM_CIVILITE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : DIPLOME
-- -----------------------------------------------------------------------------

CREATE TABLE DIPLOME
   (
    NUMERO_DIPLOME INT(2)  NOT NULL,
    DIPLOME_COMPLEMENTAIRE INT(1)  NOT NULL,
    DIPLOME_INSCRIPTION INT(1)  NOT NULL,
    LIBELLE_DIPLOME VARCHAR(50)  NULL
,   CONSTRAINT PK_DIPLOME PRIMARY KEY (NUMERO_DIPLOME)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : PARCOURS_DE_THESE
-- -----------------------------------------------------------------------------

CREATE TABLE PARCOURS_DE_THESE
   (
    NUMERO_PARCOURS_THESE CHAR(32)  NOT NULL,
    NUMERO_CHOIX_ANNEE INT(2)  NOT NULL,
    NUMERO_CHOIX_ANNEE_ANNEE2 INT(2)  NOT NULL,
    NUMERO_CHOIX_ANNEE_ANNEE3 INT(2)  NOT NULL,
    NUMERO_PRE_THESE CHAR(32)  NOT NULL,
    NUMERO_SOUTENANCE INT(2)  NOT NULL,
    PRE_THESE CHAR(32)  NULL,
    SOUTENANCE CHAR(32)  NULL,
    ANNEE1 CHAR(32)  NULL,
    ANNEE2 CHAR(32)  NULL,
    ANNEE3 CHAR(32)  NULL
,   CONSTRAINT PK_PARCOURS_DE_THESE PRIMARY KEY (NUMERO_PARCOURS_THESE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE PARCOURS_DE_THESE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_PARCOURS_DE_THESE_CHOIX_A
     ON PARCOURS_DE_THESE (NUMERO_CHOIX_ANNEE ASC)
    ;

CREATE  INDEX I_FK_PARCOURS_DE_THESE_CHOIX_1
     ON PARCOURS_DE_THESE (NUMERO_CHOIX_ANNEE_ANNEE2 ASC)
    ;

CREATE  INDEX I_FK_PARCOURS_DE_THESE_CHOIX_2
     ON PARCOURS_DE_THESE (NUMERO_CHOIX_ANNEE_ANNEE3 ASC)
    ;

CREATE  INDEX I_FK_PARCOURS_DE_THESE_PRE_THE
     ON PARCOURS_DE_THESE (NUMERO_PRE_THESE ASC)
    ;

CREATE  INDEX I_FK_PARCOURS_DE_THESE_SOUTENA
     ON PARCOURS_DE_THESE (NUMERO_SOUTENANCE ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : DEA_LOCAUX
-- -----------------------------------------------------------------------------

CREATE TABLE DEA_LOCAUX
   (
    NUM_DEA_LOCAUX INT(5)  NOT NULL,
    CODE_NATIONAL_DEA CHAR(32)  NULL,
    INTITULE_DEA_LOCAL VARCHAR(50)  NOT NULL
,   CONSTRAINT PK_DEA_LOCAUX PRIMARY KEY (NUM_DEA_LOCAUX)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : SECTEUR_ACTIVITE
-- -----------------------------------------------------------------------------

CREATE TABLE SECTEUR_ACTIVITE
   (
    NUMERO_SECTEUR_ACTIVITE INT(2)  NOT NULL,
    CODE_ACTIVITE CHAR(32)  NOT NULL,
    LIBELLE_ACTIVITE VARCHAR(50)  NULL
,   CONSTRAINT PK_SECTEUR_ACTIVITE PRIMARY KEY (NUMERO_SECTEUR_ACTIVITE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : PRE_THESE
-- -----------------------------------------------------------------------------

CREATE TABLE PRE_THESE
   (
    NUMERO_PRE_THESE CHAR(32)  NOT NULL,
    NUM_PROFESSION_AVANT_THESE INT(5)  NOT NULL,
    NUMERO_DIPLOME INT(2)  NOT NULL,
    NUMERO_DIPLOME_DIPLOME_INSCRIP INT(2)  NOT NULL,
    PROFESSION_ANTERIEURE VARCHAR(50)  NULL,
    DIPLOME_INSCRIPTION CHAR(32)  NULL,
    DIPLOME_COMPLEMENTAIRE CHAR(32)  NULL,
    NUMERO_DEA CHAR(32)  NULL,
    LIBELLE_DEA VARCHAR(50)  NULL,
    ANNE_DEA INT(4)  NULL,
    UNIVERSITE_DEA VARCHAR(50)  NULL,
    MOYENNE_DEA DECIMAL(10,2)  NULL,
    CLASSEMENT_DEA INT(2)  NULL,
    EFFECTIF_DEA INT(2)  NULL
,   CONSTRAINT PK_PRE_THESE PRIMARY KEY (NUMERO_PRE_THESE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE PRE_THESE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_PRE_THESE_PROFESSION_AVAN
     ON PRE_THESE (NUM_PROFESSION_AVANT_THESE ASC)
    ;

CREATE  INDEX I_FK_PRE_THESE_DIPLOME
     ON PRE_THESE (NUMERO_DIPLOME ASC)
    ;

CREATE  INDEX I_FK_PRE_THESE_DIPLOME1
     ON PRE_THESE (NUMERO_DIPLOME_DIPLOME_INSCRIP ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : PROFESSION_AVANT
-- -----------------------------------------------------------------------------

CREATE TABLE PROFESSION_AVANT
   (
    NUM_PROFESSION_AVANT_THESE INT(5)  NOT NULL,
    PROFESSION_ANTERIEURE CHAR(32)  NOT NULL
,   CONSTRAINT PK_PROFESSION_AVANT PRIMARY KEY (NUM_PROFESSION_AVANT_THESE)  
   ) ;

-- -----------------------------------------------------------------------------
--       TABLE : THESARD_LABORATOIRE
-- -----------------------------------------------------------------------------

CREATE TABLE THESARD_LABORATOIRE
   (
    NUMERO_THESARD_LABORATOIRE CHAR(32)  NOT NULL,
    NUM_LABORATOIRE INT(5)  NOT NULL,
    NUM_DIRECTEUR_THESE INT(2)  NOT NULL,
    NUM_DIRECTEUR_THESE_CODE_DIREC INT(2)  NOT NULL,
    NOM_LABORATOIRE_THESARD VARCHAR(50)  NULL,
    TELEPHONE_THESARD_LABORATOIRE CHAR(32)  NULL,
    POSTE_THESARD_LABORATOIRE CHAR(32)  NULL,
    FAX_THESARD_LABORATOIRE CHAR(32)  NULL,
    E_MAIL_THESARD_LABORATOIRE VARCHAR(50)  NULL,
    CODE_DIRECTEUR_THESARD_LABORAT CHAR(32)  NULL,
    CODE_CO_DIRECTEUR_THESARD_LABO CHAR(32)  NULL,
    LABORATOIRE_EXERCICE CHAR(32)  NULL
,   CONSTRAINT PK_THESARD_LABORATOIRE PRIMARY KEY (NUMERO_THESARD_LABORATOIRE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE THESARD_LABORATOIRE
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_THESARD_LABORATOIRE_LABOR
     ON THESARD_LABORATOIRE (NUM_LABORATOIRE ASC)
    ;

CREATE  INDEX I_FK_THESARD_LABORATOIRE_DIREC
     ON THESARD_LABORATOIRE (NUM_DIRECTEUR_THESE ASC)
    ;

CREATE  INDEX I_FK_THESARD_LABORATOIRE_DIRE1
     ON THESARD_LABORATOIRE (NUM_DIRECTEUR_THESE_CODE_DIREC ASC)
    ;

-- -----------------------------------------------------------------------------
--       TABLE : CHOIX_1__2__3___CD__MS__CS
-- -----------------------------------------------------------------------------

CREATE TABLE CHOIX_1__2__3___CD__MS__CS
   (
    NUM_COURS_EDST INT(5)  NOT NULL,
    NUMERO_CHOIX_ANNEE INT (2)  NOT NULL
,   CONSTRAINT PK_CHOIX_1__2__3___CD__MS__CS PRIMARY KEY (NUM_COURS_EDST, NUMERO_CHOIX_ANNEE)  
   ) ;

-- -----------------------------------------------------------------------------
--       INDEX DE LA TABLE CHOIX_1__2__3___CD__MS__CS
-- -----------------------------------------------------------------------------

CREATE  INDEX I_FK_CHOIX_1__2__3___CD__MS__C
     ON CHOIX_1__2__3___CD__MS__CS (NUM_COURS_EDST ASC)
    ;

CREATE  INDEX I_FK_CHOIX_1__2__3___CD__MS__1
     ON CHOIX_1__2__3___CD__MS__CS (NUMERO_CHOIX_ANNEE ASC)
    ;


-- -----------------------------------------------------------------------------
--       CREATION DES REFERENCES DE TABLE
-- -----------------------------------------------------------------------------


ALTER TABLE SOUTENANCE ADD (
     CONSTRAINT FK_SOUTENANCE_MENTIONS
          FOREIGN KEY (NUM_MENTION)
               REFERENCES MENTIONS (NUM_MENTION))   ;

ALTER TABLE POST_DOCTORAT ADD (
     CONSTRAINT FK_POST_DOCTORAT_ANNEE_POST_DO
          FOREIGN KEY (NUMERO_ANNEE_POST_DOCTORAT)
               REFERENCES ANNEE_POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT))   ;

ALTER TABLE POST_DOCTORAT ADD (
     CONSTRAINT FK_POST_DOCTORAT_SECTION_CNU
          FOREIGN KEY (CODE_CNU)
               REFERENCES SECTION_CNU (CODE_CNU))   ;

ALTER TABLE POST_DOCTORAT ADD (
     CONSTRAINT FK_POST_DOCTORAT_ANNEE_POST_D1
          FOREIGN KEY (NUMERO_ANNEE_POST_DOCTORAT_ANN)
               REFERENCES ANNEE_POST_DOCTORAT (NUMERO_ANNEE_POST_DOCTORAT))   ;

ALTER TABLE THESARD ADD (
     CONSTRAINT FK_THESARD_THESARD_LABORATOIRE
          FOREIGN KEY (NUMERO_THESARD_LABORATOIRE)
               REFERENCES THESARD_LABORATOIRE (NUMERO_THESARD_LABORATOIRE))   ;

ALTER TABLE THESARD ADD (
     CONSTRAINT FK_THESARD_PAYS
          FOREIGN KEY (CODE_PAYS)
               REFERENCES PAYS (CODE_PAYS))   ;

ALTER TABLE THESARD ADD (
     CONSTRAINT FK_THESARD_CIVILITE
          FOREIGN KEY (NUM_CIVILITE)
               REFERENCES CIVILITE (NUM_CIVILITE))   ;

ALTER TABLE THESARD ADD (
     CONSTRAINT FK_THESARD_ANNEE
          FOREIGN KEY (NUM_ANNEE)
               REFERENCES ANNEE (NUM_ANNEE))   ;

ALTER TABLE THESARD ADD (
     CONSTRAINT FK_THESARD_THESE
          FOREIGN KEY (NUMERO_THESE)
               REFERENCES THESE (NUMERO_THESE))   ;

ALTER TABLE THESARD ADD (
     CONSTRAINT FK_THESARD_POST_DOCTORAT
          FOREIGN KEY (NUMERO_POST_DOCTORAT)
               REFERENCES POST_DOCTORAT (NUMERO_POST_DOCTORAT))   ;

ALTER TABLE THESARD ADD (
     CONSTRAINT FK_THESARD_PARCOURS_DE_THESE
          FOREIGN KEY (NUMERO_PARCOURS_THESE)
               REFERENCES PARCOURS_DE_THESE (NUMERO_PARCOURS_THESE))   ;

ALTER TABLE ANNEE_POST_DOCTORAT ADD (
     CONSTRAINT FK_ANNEE_POST_DOCTORAT_PAYS
          FOREIGN KEY (CODE_PAYS)
               REFERENCES PAYS (CODE_PAYS))   ;

ALTER TABLE ANNEE_POST_DOCTORAT ADD (
     CONSTRAINT FK_ANNEE_POST_DOCTORAT_PROFESS
          FOREIGN KEY (CODE_PROFESSION_INSEE)
               REFERENCES PROFESSION_DOCTORALE (CODE_PROFESSION_INSEE))   ;

ALTER TABLE ANNEE_POST_DOCTORAT ADD (
     CONSTRAINT FK_ANNEE_POST_DOCTORAT_FONCTIO
          FOREIGN KEY (NUMERO_FONCTION)
               REFERENCES FONCTIONS (NUMERO_FONCTION))   ;

ALTER TABLE ANNEE_POST_DOCTORAT ADD (
     CONSTRAINT FK_ANNEE_POST_DOCTORAT_SECTEUR
          FOREIGN KEY (NUMERO_SECTEUR_ACTIVITE)
               REFERENCES SECTEUR_ACTIVITE (NUMERO_SECTEUR_ACTIVITE))   ;

ALTER TABLE LABORATOIRE ADD (
     CONSTRAINT FK_LABORATOIRE_COMPOSANTES
          FOREIGN KEY (NUMERO_COMPOSANTE)
               REFERENCES COMPOSANTES (NUMERO_COMPOSANTE))   ;

ALTER TABLE LABORATOIRE ADD (
     CONSTRAINT FK_LABORATOIRE_CIVILITE
          FOREIGN KEY (NUM_CIVILITE)
               REFERENCES CIVILITE (NUM_CIVILITE))   ;

ALTER TABLE LABORATOIRE ADD (
     CONSTRAINT FK_LABORATOIRE_TYPE_EQUIPE
          FOREIGN KEY (NUM_TYPE)
               REFERENCES TYPE_EQUIPE (NUM_TYPE))   ;

ALTER TABLE THESE ADD (
     CONSTRAINT FK_THESE_ANNEE
          FOREIGN KEY (NUM_ANNEE)
               REFERENCES ANNEE (NUM_ANNEE))   ;

ALTER TABLE THESE ADD (
     CONSTRAINT FK_THESE_ANNEE1
          FOREIGN KEY (NUM_ANNEE_INSCRIPTION_ANNEE_3)
               REFERENCES ANNEE (NUM_ANNEE))   ;

ALTER TABLE THESE ADD (
     CONSTRAINT FK_THESE_FINANCEMENT
          FOREIGN KEY (CODE_FINANCEMENT)
               REFERENCES FINANCEMENT (CODE_FINANCEMENT))   ;

ALTER TABLE THESE ADD (
     CONSTRAINT FK_THESE_ANNEE2
          FOREIGN KEY (NUM_ANNEE_INSCRIPTION_ANNEE_4)
               REFERENCES ANNEE (NUM_ANNEE))   ;

ALTER TABLE THESE ADD (
     CONSTRAINT FK_THESE_DISCIPLINES
          FOREIGN KEY (CODE_DISCIPLINE)
               REFERENCES DISCIPLINES (CODE_DISCIPLINE))   ;

ALTER TABLE COURS_EDST ADD (
     CONSTRAINT FK_COURS_EDST_DEA_LOCAUX
          FOREIGN KEY (NUM_DEA_LOCAUX)
               REFERENCES DEA_LOCAUX (NUM_DEA_LOCAUX))   ;

ALTER TABLE DIRECTEUR_THESE ADD (
     CONSTRAINT FK_DIRECTEUR_THESE_CIVILITE
          FOREIGN KEY (NUM_CIVILITE)
               REFERENCES CIVILITE (NUM_CIVILITE))   ;

ALTER TABLE PARCOURS_DE_THESE ADD (
     CONSTRAINT FK_PARCOURS_DE_THESE_CHOIX_ANN
          FOREIGN KEY (NUMERO_CHOIX_ANNEE)
               REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE))   ;

ALTER TABLE PARCOURS_DE_THESE ADD (
     CONSTRAINT FK_PARCOURS_DE_THESE_CHOIX_AN1
          FOREIGN KEY (NUMERO_CHOIX_ANNEE_ANNEE2)
               REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE))   ;

ALTER TABLE PARCOURS_DE_THESE ADD (
     CONSTRAINT FK_PARCOURS_DE_THESE_CHOIX_AN2
          FOREIGN KEY (NUMERO_CHOIX_ANNEE_ANNEE3)
               REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE))   ;

ALTER TABLE PARCOURS_DE_THESE ADD (
     CONSTRAINT FK_PARCOURS_DE_THESE_PRE_THESE
          FOREIGN KEY (NUMERO_PRE_THESE)
               REFERENCES PRE_THESE (NUMERO_PRE_THESE))   ;

ALTER TABLE PARCOURS_DE_THESE ADD (
     CONSTRAINT FK_PARCOURS_DE_THESE_SOUTENANC
          FOREIGN KEY (NUMERO_SOUTENANCE)
               REFERENCES SOUTENANCE (NUMERO_SOUTENANCE))   ;

ALTER TABLE PRE_THESE ADD (
     CONSTRAINT FK_PRE_THESE_PROFESSION_AVANT
          FOREIGN KEY (NUM_PROFESSION_AVANT_THESE)
               REFERENCES PROFESSION_AVANT (NUM_PROFESSION_AVANT_THESE))   ;

ALTER TABLE PRE_THESE ADD (
     CONSTRAINT FK_PRE_THESE_DIPLOME
          FOREIGN KEY (NUMERO_DIPLOME)
               REFERENCES DIPLOME (NUMERO_DIPLOME))   ;

ALTER TABLE PRE_THESE ADD (
     CONSTRAINT FK_PRE_THESE_DIPLOME1
          FOREIGN KEY (NUMERO_DIPLOME_DIPLOME_INSCRIP)
               REFERENCES DIPLOME (NUMERO_DIPLOME))   ;

ALTER TABLE THESARD_LABORATOIRE ADD (
     CONSTRAINT FK_THESARD_LABORATOIRE_LABORAT
          FOREIGN KEY (NUM_LABORATOIRE)
               REFERENCES LABORATOIRE (NUM_LABORATOIRE))   ;

ALTER TABLE THESARD_LABORATOIRE ADD (
     CONSTRAINT FK_THESARD_LABORATOIRE_DIRECTE
          FOREIGN KEY (NUM_DIRECTEUR_THESE)
               REFERENCES DIRECTEUR_THESE (NUM_DIRECTEUR_THESE))   ;

ALTER TABLE THESARD_LABORATOIRE ADD (
     CONSTRAINT FK_THESARD_LABORATOIRE_DIRECT1
          FOREIGN KEY (NUM_DIRECTEUR_THESE_CODE_DIREC)
               REFERENCES DIRECTEUR_THESE (NUM_DIRECTEUR_THESE))   ;

ALTER TABLE CHOIX_1__2__3___CD__MS__CS ADD (
     CONSTRAINT FK_CHOIX_1__2__3___CD__MS__CS_
          FOREIGN KEY (NUM_COURS_EDST)
               REFERENCES COURS_EDST (NUM_COURS_EDST))   ;

ALTER TABLE CHOIX_1__2__3___CD__MS__CS ADD (
     CONSTRAINT FK_CHOIX_1__2__3___CD__MS__CS1
          FOREIGN KEY (NUMERO_CHOIX_ANNEE)
               REFERENCES CHOIX_ANNEE (NUMERO_CHOIX_ANNEE))   ;


-- -----------------------------------------------------------------------------
--                FIN DE GENERATION
-- -----------------------------------------------------------------------------
